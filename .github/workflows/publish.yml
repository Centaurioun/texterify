name: Deploy

on:
  push:
    branches: [master]
    tags:
      - v1.*
      - v2.*
      - v3.*
      - v4.*
      - v5.*

jobs:
  test:
    uses: ./.github/workflows/reusable-test.yml

  publish-cloud:
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set RELEASE_VERSION env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image for cloud
        run: docker build . --file Dockerfile --target production --build-arg COMMIT_HASH=$GITHUB_SHA --build-arg PROPRIETARY_MODE=${{ secrets.PROPRIETARY_MODE }} --build-arg STRIPE_PUBLIC_API_KEY=${{ secrets.STRIPE_PUBLIC_API_KEY }} --build-arg TEXTERIFY_PAYMENT_SERVER=${{ secrets.TEXTERIFY_PAYMENT_SERVER }} --build-arg SENTRY_DSN_FRONTEND=${{ secrets.SENTRY_DSN_FRONTEND }} --tag chrztoph/texterify-cloud:$GITHUB_SHA

      - name: Tag cloud image also as latest
        run: docker tag chrztoph/texterify-cloud:$GITHUB_SHA chrztoph/texterify-cloud:latest

      - name: Push images
        run: |
          docker push chrztoph/texterify-cloud:$GITHUB_SHA
          docker push chrztoph/texterify-cloud:latest

      - name: Tag image if tag is set
        if: env.RELEASE_VERSION
        run: docker tag chrztoph/texterify-cloud:$GITHUB_SHA chrztoph/texterify-cloud:${{ env.RELEASE_VERSION }}

      - name: Push images if tag is set
        if: env.RELEASE_VERSION
        run: |
          docker push chrztoph/texterify-cloud:${{ env.RELEASE_VERSION }}

      - name: Notify slack fail
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  publish-on-premise:
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set RELEASE_VERSION env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image for on-premise
        run: docker build . --file Dockerfile --target production --build-arg COMMIT_HASH=$GITHUB_SHA --tag chrztoph/texterify:$GITHUB_SHA

      - name: Tag image also as latest
        run: docker tag chrztoph/texterify:$GITHUB_SHA chrztoph/texterify:latest

      - name: Push images
        run: |
          docker push chrztoph/texterify:$GITHUB_SHA
          docker push chrztoph/texterify:latest

      - name: Tag image if tag is set
        if: env.RELEASE_VERSION
        run: docker tag chrztoph/texterify:$GITHUB_SHA chrztoph/texterify:${{ env.RELEASE_VERSION }}

      - name: Push images if tag is set
        if: env.RELEASE_VERSION
        run: |
          docker push chrztoph/texterify:${{ env.RELEASE_VERSION }}
