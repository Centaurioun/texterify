#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------

version: '3'
services:
  db:
    expose:
      - "5432"
    ports:
      - "5432:5432"

  # Update this to the name of the service you want to work with in your docker-compose.yml file
  app:
    # If you want add a non-root user to your Dockerfile, you can use the "remoteUser"
    # property in devcontainer.json to cause VS Code its sub-processes (terminals, tasks,
    # debugging) to execute as the user. Uncomment the next line if you want the entire
    # container to run as this user instead. Note that, on Linux, you may need to
    # ensure the UID and GID of the container user you create matches your local user.
    # See https://aka.ms/vscode-remote/containers/non-root for details.
    #
    # user: vscode

    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer
    # folder. Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - .:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    image: chrztoph/texterify:local

    environment:
      - SECRET_KEY_BASE=abd834a091ca2069a660b50dd50cffa0b9d5f6bd51395da186f07785c14f14bb52109b4d8bb3344cb8eb31ada9dd2a10a3422ef73317c0923ee32a732557faac
      - DB_DEV_HOST=db
      - DB_DEV_USERNAME=postgres
      - DB_TEST_HOST=db
      - DB_TEST_USERNAME=postgres

    expose:
      - "3000"
      - "3011"
    ports:
      - "3000:3000"
      - "3011:3011"

    deploy:
      resources:
        reservations:
          memory: 4G

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
